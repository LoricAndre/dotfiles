[
  {
    "bindings": {
      "up": "menu::SelectPrev",
      "pageup": "menu::SelectFirst",
      "shift-pageup": "menu::SelectFirst",
      "ctrl-p": "menu::SelectPrev",
      "down": "menu::SelectNext",
      "pagedown": "menu::SelectLast",
      "shift-pagedown": "menu::SelectFirst",
      "ctrl-n": "menu::SelectNext",
      "enter": "menu::Confirm",
      "ctrl-enter": "menu::SecondaryConfirm",
      "ctrl-v": "menu::SecondaryConfirm",
      "escape": "menu::Cancel",
      "ctrl-escape": "menu::Cancel",
      "ctrl-c": "menu::Cancel",
      "shift-enter": "picker::ConfirmInput",
      "alt-enter": [
        "picker::ConfirmInput",
        {
          "secondary": false
        }
      ],
      "ctrl-alt-enter": [
        "picker::ConfirmInput",
        {
          "secondary": true
        }
      ],
      "ctrl-shift-w": "pane::CloseActiveItem",
      "ctrl-=": "zed::IncreaseBufferFontSize",
      "ctrl-+": "zed::IncreaseBufferFontSize",
      "ctrl--": "zed::DecreaseBufferFontSize",
      "ctrl-0": "zed::ResetBufferFontSize",
      "ctrl-,": "zed::OpenSettings",
      "alt-f9": "zed::Hide",
      "f11": "zed::ToggleFullScreen",
      "ctrl-t": "terminal_panel::ToggleFocus",
      "ctrl-shift-t": "workspace::NewTerminal",
      "alt-j": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-m": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "g c c": "editor::ToggleComments",
      "space g b": "branches::OpenRecent",
      "space g r": "editor::RevertSelectedHunks",
      "space g l": "editor::ToggleGitBlame",
      "space g g": ["workspace::SendKeystrokes", ": center term enter lazygit && exit enter"],
      "g d": "editor::GoToDefinition",
      "g shift-d": "editor::GoToDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "g n": "editor::Rename",
      "g s": "project_symbols::Toggle",
      "g m": "vim::SelectNext",
      "g j": "vim::SelectPrevious",
      "g k": "editor::GoToDiagnostic",
      "ctrl-l": "editor::AddSelectionAbove",
      "ctrl-k": "editor::AddSelectionBelow",
      "space shift-s": [
        "workspace::Open",
        {
          "create_new_window": false
        }
      ],
      "space s": [
        "projects::OpenRecent",
        {
          "create_new_window": false
        }
      ],
      "space r": "task::Spawn",
      "space a": "workspace::NewSearch"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "escape": "editor::Cancel",
      "backspace": "editor::Backspace",
      "shift-backspace": "editor::Backspace",
      "delete": "editor::Delete",
      "ctrl-d": "editor::Delete",
      "tab": "editor::Tab",
      "shift-tab": "editor::TabPrev",
      "ctrl-backspace": "editor::DeleteToPreviousWordStart",
      "ctrl-w": "editor::DeleteToPreviousWordStart",
      "ctrl-delete": "editor::DeleteToNextWordEnd",
      "ctrl-x": "editor::Cut",
      "ctrl-c": "editor::Copy",
      "ctrl-v": "editor::Paste",
      "ctrl-z": "editor::Undo",
      "ctrl-shift-z": "editor::Redo",
      "up": "editor::MoveUp",
      "pageup": "editor::PageUp",
      "home": "editor::MoveToBeginningOfLine",
      "down": "editor::MoveDown",
      "pagedown": "editor::PageDown",
      "end": "editor::MoveToEndOfLine",
      "left": "editor::MoveLeft",
      "right": "editor::MoveRight",
      "ctrl-left": "editor::MoveToPreviousWordStart",
      "ctrl-right": "editor::MoveToNextWordEnd",
      "ctrl-home": "editor::MoveToBeginning",
      "ctrl-end": "editor::MoveToEnd",
      "shift-up": "editor::SelectUp",
      "shift-down": "editor::SelectDown",
      "shift-left": "editor::SelectLeft",
      "shift-right": "editor::SelectRight",
      "ctrl-shift-left": "editor::SelectToPreviousWordStart",
      "ctrl-shift-right": "editor::SelectToNextWordEnd",
      "ctrl-shift-up": "editor::AddSelectionAbove",
      "ctrl-shift-down": "editor::AddSelectionBelow",
      "ctrl-shift-home": "editor::SelectToBeginning",
      "ctrl-shift-end": "editor::SelectToEnd",
      "ctrl-a": "editor::SelectAll",
      "ctrl-shift-i": "editor::Format",
      "shift-home": [
        "editor::SelectToBeginningOfLine",
        {
          "stop_at_soft_wraps": true
        }
      ],
      "shift-end": [
        "editor::SelectToEndOfLine",
        {
          "stop_at_soft_wraps": true
        }
      ],
      "ctrl-alt-space": "editor::ShowCharacterPalette",
      "ctrl-;": "editor::ToggleLineNumbers",
      "ctrl-'": "editor::ToggleHunkDiff",
      "ctrl-\"": "editor::ExpandAllHunkDiffs"
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {
      "enter": "editor::Newline",
      "shift-enter": "editor::Newline",
      "ctrl-shift-enter": "editor::NewlineBelow",
      "ctrl-enter": "editor::NewlineAbove",
      "alt-z": "editor::ToggleSoftWrap",
      "ctrl-f": "buffer_search::Deploy",
      "ctrl-h": [
        "buffer_search::Deploy",
        {
          "replace_enabled": true
        }
      ],
      "ctrl->": "assistant::QuoteSelection"
    }
  },
  {
    "context": "Editor && mode == full && inline_completion",
    "bindings": {
      "alt-]": "editor::NextInlineCompletion",
      "alt-[": "editor::PreviousInlineCompletion",
      "alt-right": "editor::AcceptPartialInlineCompletion"
    }
  },
  {
    "context": "Editor && !inline_completion",
    "bindings": {
      "alt-\\": "editor::ShowInlineCompletion"
    }
  },
  {
    "context": "Editor && mode == auto_height",
    "bindings": {
      "ctrl-enter": "editor::Newline",
      "shift-enter": "editor::Newline",
      "ctrl-shift-enter": "editor::NewlineBelow"
    }
  },
  {
    "context": "AssistantPanel",
    "bindings": {
      "ctrl-g": "search::SelectNextMatch",
      "ctrl-shift-g": "search::SelectPrevMatch"
    }
  },
  {
    "context": "ConversationEditor > Editor",
    "bindings": {
      "ctrl-enter": "assistant::Assist",
      "ctrl-s": "workspace::Save",
      "ctrl->": "assistant::QuoteSelection",
      "shift-enter": "assistant::Split",
      "ctrl-r": "assistant::CycleMessageRole"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "escape": "buffer_search::Dismiss",
      "tab": "buffer_search::FocusEditor",
      "enter": "search::SelectNextMatch",
      "shift-enter": "search::SelectPrevMatch",
      "alt-enter": "search::SelectAllMatches",
      "ctrl-f": "search::FocusSearch",
      "ctrl-h": "search::ToggleReplace"
    }
  },
  {
    "context": "BufferSearchBar && in_replace",
    "bindings": {
      "enter": "search::ReplaceNext",
      "ctrl-enter": "search::ReplaceAll"
    }
  },
  {
    "context": "BufferSearchBar && !in_replace > Editor",
    "bindings": {
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery"
    }
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {
      "escape": "project_search::ToggleFocus",
      "ctrl-shift-f": "search::FocusSearch",
      "ctrl-shift-h": "search::ToggleReplace",
      "alt-ctrl-g": "search::ToggleRegex",
      "alt-ctrl-x": "search::ToggleRegex"
    }
  },
  {
    "context": "ProjectSearchBar > Editor",
    "bindings": {
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery"
    }
  },
  {
    "context": "ProjectSearchBar && in_replace",
    "bindings": {
      "enter": "search::ReplaceNext",
      "ctrl-alt-enter": "search::ReplaceAll"
    }
  },
  {
    "context": "ProjectSearchView",
    "bindings": {
      "escape": "project_search::ToggleFocus",
      "ctrl-shift-h": "search::ToggleReplace",
      "alt-ctrl-g": "search::ToggleRegex",
      "alt-ctrl-x": "search::ToggleRegex"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-pageup": "pane::ActivatePrevItem",
      "ctrl-pagedown": "pane::ActivateNextItem",
      "ctrl-w": "editor::DeleteToPreviousWordStart",
      "alt-ctrl-t": "pane::CloseInactiveItems",
      "alt-ctrl-shift-w": "workspace::CloseInactiveTabsAndPanes",
      "ctrl-shift-f": "project_search::ToggleFocus",
      "ctrl-alt-g": "search::SelectNextMatch",
      "ctrl-alt-shift-g": "search::SelectPrevMatch",
      "ctrl-alt-shift-h": "search::ToggleReplace",
      "alt-enter": "search::SelectAllMatches",
      "alt-c": "search::ToggleCaseSensitive",
      "alt-w": "search::ToggleWholeWord",
      "alt-r": "search::ToggleRegex",
      "alt-ctrl-f": "project_search::ToggleFilters",
      "ctrl-alt-shift-r": "search::ToggleRegex",
      "ctrl-alt-shift-x": "search::ToggleRegex"
    }
  },
  // Bindings from VS Code
  {
    "context": "Editor",
    "bindings": {
      "ctrl-[": "editor::Outdent",
      "ctrl-]": "editor::Indent",
      "shift-alt-up": "editor::AddSelectionAbove",
      "shift-alt-down": "editor::AddSelectionBelow",
      "ctrl-shift-k": "editor::DeleteLine",
      "alt-up": "editor::MoveLineUp",
      "alt-down": "editor::MoveLineDown",
      "ctrl-alt-shift-up": "editor::DuplicateLineUp",
      "ctrl-alt-shift-down": "editor::DuplicateLineDown",
      "ctrl-shift-left": "editor::SelectToPreviousWordStart",
      "ctrl-shift-right": "editor::SelectToNextWordEnd",
      "ctrl-shift-up": "editor::SelectLargerSyntaxNode", //todo(linux) tmp keybinding
      "ctrl-shift-down": "editor::SelectSmallerSyntaxNode", //todo(linux) tmp keybinding
      "ctrl-d": [
        "editor::SelectNext",
        {
          "replace_newest": false
        }
      ],
      "ctrl-shift-l": "editor::SelectAllMatches",
      "ctrl-shift-d": [
        "editor::SelectPrevious",
        {
          "replace_newest": false
        }
      ],
      "ctrl-/": [
        "editor::ToggleComments",
        {
          "advance_downwards": false
        }
      ],
      "ctrl-u": "editor::UndoSelection",
      "ctrl-shift-u": "editor::RedoSelection",
      "f2": "editor::Rename",
      "f12": "editor::GoToDefinition",
      "alt-f12": "editor::GoToDefinitionSplit",
      "ctrl-f12": "editor::GoToTypeDefinition",
      "shift-f12": "editor::GoToImplementation",
      "alt-ctrl-f12": "editor::GoToTypeDefinitionSplit",
      "alt-shift-f12": "editor::FindAllReferences",
      "ctrl-m": "editor::MoveToEnclosingBracket",
      "ctrl-shift-[": "editor::Fold",
      "ctrl-shift-]": "editor::UnfoldLines",
      "ctrl-space": "editor::ShowCompletions",
      "ctrl-.": "editor::ToggleCodeActions",
      "alt-ctrl-r": "editor::RevealInFileManager",
      "ctrl-alt-shift-c": "editor::DisplayCursorNames"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "alt-1": ["pane::ActivateItem", 0],
      "alt-2": ["pane::ActivateItem", 1],
      "alt-3": ["pane::ActivateItem", 2],
      "alt-4": ["pane::ActivateItem", 3],
      "alt-5": ["pane::ActivateItem", 4],
      "alt-6": ["pane::ActivateItem", 5],
      "alt-7": ["pane::ActivateItem", 6],
      "alt-8": ["pane::ActivateItem", 7],
      "alt-9": ["pane::ActivateItem", 8],
      "alt-0": "pane::ActivateLastItem",
      "ctrl-alt--": "pane::GoBack",
      "ctrl-alt-_": "pane::GoForward",
      "ctrl-shift-t": "pane::ReopenClosedItem",
      "ctrl-shift-f": "project_search::ToggleFocus"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // Change the default action on `menu::Confirm` by setting the parameter
      "alt-cmd-o": [
        "projects::OpenRecent",
        {
          "create_new_window": true
        }
      ],
      "ctrl-shift-s": "workspace::SaveAs",
      "ctrl-n": "workspace::NewFile",
      "ctrl-shift-n": "workspace::NewWindow",
      "alt-1": ["workspace::ActivatePane", 0],
      "alt-2": ["workspace::ActivatePane", 1],
      "alt-3": ["workspace::ActivatePane", 2],
      "alt-4": ["workspace::ActivatePane", 3],
      "alt-5": ["workspace::ActivatePane", 4],
      "alt-6": ["workspace::ActivatePane", 5],
      "alt-7": ["workspace::ActivatePane", 6],
      "alt-8": ["workspace::ActivatePane", 7],
      "alt-9": ["workspace::ActivatePane", 8],
      "ctrl-alt-b": "workspace::ToggleLeftDock",
      "ctrl-b": "workspace::ToggleRightDock",
      "ctrl-j": "workspace::ToggleBottomDock",
      "ctrl-alt-y": "workspace::CloseAllDocks",
      "ctrl-shift-f": "pane::DeploySearch",
      "ctrl-shift-h": [
        "pane::DeploySearch",
        {
          "replace_enabled": true
        }
      ],
      "ctrl-shift-t": "project_symbols::Toggle",
      "ctrl-p": "file_finder::Toggle",
      "ctrl-tab": "tab_switcher::Toggle",
      "ctrl-shift-tab": [
        "tab_switcher::Toggle",
        {
          "select_last": true
        }
      ],
      "ctrl-e": "file_finder::Toggle",
      "ctrl-shift-p": "command_palette::Toggle",
      "ctrl-shift-m": "diagnostics::Deploy",
      "ctrl-shift-e": "project_panel::ToggleFocus",
      "ctrl-?": "assistant::ToggleFocus",
      "ctrl-alt-s": "workspace::SaveAll",
      "escape": "workspace::Unfollow",
      "alt-t": "task::Rerun",
      "alt-shift-t": "task::Spawn"
    }
  },
  // Bindings from Sublime Text
  {
    "context": "Editor",
    "bindings": {
      "ctrl-shift-k": "editor::DeleteLine",
      "ctrl-shift-d": "editor::DuplicateLineDown",
      "ctrl-j": "editor::JoinLines",
      "ctrl-alt-backspace": "editor::DeleteToPreviousSubwordStart",
      "ctrl-alt-h": "editor::DeleteToPreviousSubwordStart",
      "ctrl-alt-delete": "editor::DeleteToNextSubwordEnd",
      "ctrl-alt-d": "editor::DeleteToNextSubwordEnd",
      "ctrl-alt-left": "editor::MoveToPreviousSubwordStart",
      "ctrl-alt-b": "editor::MoveToPreviousSubwordStart",
      "ctrl-alt-right": "editor::MoveToNextSubwordEnd",
      "ctrl-alt-f": "editor::MoveToNextSubwordEnd",
      "ctrl-alt-shift-left": "editor::SelectToPreviousSubwordStart",
      "ctrl-alt-shift-b": "editor::SelectToPreviousSubwordStart",
      "ctrl-alt-shift-right": "editor::SelectToNextSubwordEnd",
      "ctrl-alt-shift-f": "editor::SelectToNextSubwordEnd"
    }
  },
  // Bindings that should be unified with bindings for more general actions
  {
    "context": "Editor && renaming",
    "bindings": {
      "enter": "editor::ConfirmRename"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "enter": "editor::ConfirmCompletion",
      // "tab": "editor::ConfirmCompletion",
      "tab": "editor::ContextMenuNext",
      "shift-tab": "editor::ContextMenuPrev"
    }
  },
  {
    "context": "Editor && showing_code_actions",
    "bindings": {
      "enter": "editor::ConfirmCodeAction"
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "up": "editor::ContextMenuPrev",
      "ctrl-p": "editor::ContextMenuPrev",
      "down": "editor::ContextMenuNext",
      "ctrl-n": "editor::ContextMenuNext",
      "pageup": "editor::ContextMenuFirst",
      "pagedown": "editor::ContextMenuLast"
    }
  },
  // Custom bindings
  {
    "bindings": {
      "ctrl-alt-shift-f": "workspace::FollowNextCollaborator",
      // TODO: Move this to a dock open action
      "ctrl-shift-c": "collab_panel::ToggleFocus",
      "ctrl-alt-i": "zed::DebugElements",
      "ctrl-:": "editor::ToggleInlayHints"
    }
  },
  {
    "context": "Editor && mode == full",
    "bindings": {
      "alt-enter": "editor::OpenExcerpts",
      "shift-enter": "editor::ExpandExcerpts",
      "ctrl-f8": "editor::GoToHunk",
      "ctrl-shift-f8": "editor::GoToPrevHunk",
      "ctrl-enter": "assistant::InlineAssist"
    }
  },
  {
    "context": "ProjectSearchBar && !in_replace",
    "bindings": {
      "ctrl-enter": "project_search::SearchInNew"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "left": "project_panel::CollapseSelectedEntry",
      "right": "project_panel::ExpandSelectedEntry",
      "ctrl-n": "project_panel::NewFile",
      "alt-ctrl-n": "project_panel::NewDirectory",
      "ctrl-x": "project_panel::Cut",
      "ctrl-c": "project_panel::Copy",
      "ctrl-v": "project_panel::Paste",
      "ctrl-alt-c": "project_panel::CopyPath",
      "alt-ctrl-shift-c": "project_panel::CopyRelativePath",
      "f2": "project_panel::Rename",
      "enter": "project_panel::Rename",
      "backspace": "project_panel::Trash",
      "delete": "project_panel::Trash",
      "ctrl-backspace": [
        "project_panel::Delete",
        {
          "skip_prompt": true
        }
      ],
      "ctrl-delete": [
        "project_panel::Delete",
        {
          "skip_prompt": true
        }
      ],
      "shift-return": "project_panel::RevealInFileManager",
      "alt-shift-f": "project_panel::NewSearchInDirectory"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space": "project_panel::Open"
    }
  },
  {
    "context": "CollabPanel && not_editing",
    "bindings": {
      "ctrl-backspace": "collab_panel::Remove",
      "space": "menu::Confirm"
    }
  },
  {
    "context": "(CollabPanel && editing) > Editor",
    "bindings": {
      "space": "collab_panel::InsertSpace"
    }
  },
  {
    "context": "ChannelModal",
    "bindings": {
      "tab": "channel_modal::ToggleMode"
    }
  },
  {
    "context": "ChannelModal > Picker > Editor",
    "bindings": {
      "tab": "channel_modal::ToggleMode"
    }
  },
  {
    "context": "FileFinder",
    "bindings": {
      "ctrl-shift-p": "file_finder::SelectPrev"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "ctrl-up": "menu::SelectPrev",
      "ctrl-down": "menu::SelectNext",
      "ctrl-shift-tab": "menu::SelectPrev",
      "ctrl-backspace": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-alt-space": "terminal::ShowCharacterPalette",
      "shift-ctrl-c": "terminal::Copy",
      "shift-ctrl-v": "terminal::Paste",
      "up": ["terminal::SendKeystroke", "up"],
      "pageup": ["terminal::SendKeystroke", "pageup"],
      "down": ["terminal::SendKeystroke", "down"],
      "pagedown": ["terminal::SendKeystroke", "pagedown"],
      "escape": ["terminal::SendKeystroke", "escape"],
      "enter": ["terminal::SendKeystroke", "enter"],
      "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
      "ctrl-shift-d": "pane::CloseActiveItem",
      "ctrl-w": ["terminal::SendKeystroke", "ctrl-w"],
      "ctrl-a": ["terminal::SendKeystroke", "ctrl-a"]
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "i": [
        "vim::PushOperator",
        {
          "Object": {
            "around": false
          }
        }
      ],
      "a": [
        "vim::PushOperator",
        {
          "Object": {
            "around": true
          }
        }
      ],
      "space f": "file_finder::Toggle",
      "space space": ["workspace::SendKeystrokes", "ctrl-tab enter"],
      "space z": "workspace::ToggleZoom",
      ":": "command_palette::Toggle",
      "j": "vim::Left",
      "left": "vim::Left",
      "backspace": "vim::Backspace",
      "k": "vim::Down",
      "down": "vim::Down",
      "enter": "vim::NextLineStart",
      "l": "vim::Up",
      "up": "vim::Up",
      "m": "vim::Right",
      "right": "vim::Right",
      "space": "vim::Space",
      "$": "vim::EndOfLine",
      "^": "vim::FirstNonWhitespace",
      "_": "vim::StartOfLineDownward",
      "g _": "vim::EndOfLineDownward",
      "shift-g": "vim::EndOfDocument",
      "{": "vim::StartOfParagraph",
      "}": "vim::EndOfParagraph",
      "|": "vim::GoToColumn",
      // Word motions
      "w": "vim::NextWordStart",
      "e": "vim::NextWordEnd",
      "b": "vim::PreviousWordStart",
      "g e": "vim::PreviousWordEnd",
      // Subword motions
      // "w": "vim::NextSubwordStart",
      // "b": "vim::PreviousSubwordStart",
      // "e": "vim::NextSubwordEnd",
      // "g e": "vim::PreviousSubwordEnd",
      "shift-w": [
        "vim::NextWordStart",
        {
          "ignorePunctuation": true
        }
      ],
      "shift-e": [
        "vim::NextWordEnd",
        {
          "ignorePunctuation": true
        }
      ],
      "shift-b": [
        "vim::PreviousWordStart",
        {
          "ignorePunctuation": true
        }
      ],
      "g shift-e": [
        "vim::PreviousWordEnd",
        {
          "ignorePunctuation": true
        }
      ],
      "/": "vim::Search",
      "?": [
        "vim::Search",
        {
          "backwards": true
        }
      ],
      "*": "vim::MoveToNext",
      "#": "vim::MoveToPrev",
      "n": "vim::MoveToNextMatch",
      "shift-n": "vim::MoveToPrevMatch",
      "%": "vim::Matching",
      "f": [
        "vim::PushOperator",
        {
          "FindForward": {
            "before": false
          }
        }
      ],
      "t": [
        "vim::PushOperator",
        {
          "FindForward": {
            "before": true
          }
        }
      ],
      "shift-f": [
        "vim::PushOperator",
        {
          "FindBackward": {
            "after": false
          }
        }
      ],
      "shift-t": [
        "vim::PushOperator",
        {
          "FindBackward": {
            "after": true
          }
        }
      ],
      ";": "vim::RepeatFind",
      ",": "vim::RepeatFindReversed",
      "ctrl-o": "pane::GoBack",
      "' '": "pane::GoBack",
      "ctrl-i": "pane::GoForward",
      "ctrl-]": "editor::GoToDefinition",
      "escape": ["vim::SwitchMode", "Normal"],
      "ctrl-[": ["vim::SwitchMode", "Normal"],
      "v": "vim::ToggleVisual",
      "shift-v": "vim::ToggleVisualLine",
      "ctrl-v": "vim::ToggleVisualBlock",
      "ctrl-q": "vim::ToggleVisualBlock",
      "shift-k": "editor::Hover",
      "shift-r": "vim::ToggleReplace",
      "0": "vim::StartOfLine", // When no number operator present, use start of line motion
      "ctrl-f": "vim::PageDown",
      "pagedown": "vim::PageDown",
      "ctrl-b": "vim::PageUp",
      "pageup": "vim::PageUp",
      "ctrl-d": "vim::ScrollDown",
      "ctrl-u": "vim::ScrollUp",
      "ctrl-e": "vim::LineDown",
      "ctrl-y": "vim::LineUp",
      "g g": "vim::StartOfDocument",
      "tab": "pane::ActivateNextItem",
      "shift-tab": "pane::ActivatePrevItem",
      "g d": "editor::GoToDefinition",
      "g f": "editor::Format",
      "g shift-d": "editor::GoToTypeDefinition",
      "g l": "editor::GoToPrevDiagnostic",
      "space o": "outline_panel::Open",
      "space m": "search::SelectNextMatch",
      "g >": [
        "editor::SelectNext",
        {
          "replace_newest": true
        }
      ],
      "g <": [
        "editor::SelectPrevious",
        {
          "replace_newest": true
        }
      ],
      "g shift-a": "editor::SelectAllMatches",
      "g s": "outline::Toggle",
      "g shift-s": "project_symbols::Toggle",
      "g a": "editor::ToggleCodeActions", // zed specific
      "g r": "editor::FindAllReferences", // zed specific
      "g space": "editor::OpenExcerpts", // zed specific
      "g *": [
        "vim::MoveToNext",
        {
          "partialWord": true
        }
      ],
      "g #": [
        "vim::MoveToPrev",
        {
          "partialWord": true
        }
      ],
      "g down": [
        "vim::Down",
        {
          "displayLines": true
        }
      ],
      "g up": [
        "vim::Up",
        {
          "displayLines": true
        }
      ],
      "g $": [
        "vim::EndOfLine",
        {
          "displayLines": true
        }
      ],
      "g end": [
        "vim::EndOfLine",
        {
          "displayLines": true
        }
      ],
      "g 0": [
        "vim::StartOfLine",
        {
          "displayLines": true
        }
      ],
      "g home": [
        "vim::StartOfLine",
        {
          "displayLines": true
        }
      ],
      "g ^": [
        "vim::FirstNonWhitespace",
        {
          "displayLines": true
        }
      ],
      "g ]": "editor::GoToDiagnostic",
      "g [": "editor::GoToPrevDiagnostic",
      "shift-h": "vim::WindowTop",
      "shift-m": "vim::WindowMiddle",
      "shift-l": "vim::WindowBottom",
      // z commands
      "z t": "editor::ScrollCursorTop",
      "z z": "editor::ScrollCursorCenter",
      "z .": ["workspace::SendKeystrokes", "z z ^"],
      "z b": "editor::ScrollCursorBottom",
      "z c": "editor::Fold",
      "z o": "editor::UnfoldLines",
      "z f": "editor::FoldSelectedRanges",
      // Count support
      "1": ["vim::Number", 1],
      "2": ["vim::Number", 2],
      "3": ["vim::Number", 3],
      "4": ["vim::Number", 4],
      "5": ["vim::Number", 5],
      "6": ["vim::Number", 6],
      "7": ["vim::Number", 7],
      "8": ["vim::Number", 8],
      "9": ["vim::Number", 9],
      // window related commands (ctrl-w X)
      "alt-j": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-m": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Down"],
      "-": "pane::RevealInProjectPanel"
    }
  },
  {
    // escape is in its own section so that it cancels a pending count.
    "context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
    "bindings": {
      "escape": "editor::Cancel",
      "ctrl-[": "editor::Cancel"
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
    "bindings": {
      ".": "vim::Repeat",
      "c": ["vim::PushOperator", "Change"],
      "shift-c": "vim::ChangeToEndOfLine",
      "d": ["vim::PushOperator", "Delete"],
      "shift-d": "vim::DeleteToEndOfLine",
      "shift-j": "vim::JoinLines",
      "y": ["vim::PushOperator", "Yank"],
      "shift-y": "vim::YankToEndOfLine",
      "i": "vim::InsertBefore",
      "shift-i": "vim::InsertFirstNonWhitespace",
      "a": "vim::InsertAfter",
      "shift-a": "vim::InsertEndOfLine",
      "x": "vim::DeleteRight",
      "shift-x": "vim::DeleteLeft",
      "o": "vim::InsertLineBelow",
      "shift-o": "vim::InsertLineAbove",
      "~": "vim::ChangeCase",
      "ctrl-a": "vim::Increment",
      "ctrl-x": "vim::Decrement",
      "p": "vim::Paste",
      "shift-p": [
        "vim::Paste",
        {
          "before": true
        }
      ],
      "u": "editor::Undo",
      "ctrl-r": "editor::Redo",
      "r": ["vim::PushOperator", "Replace"],
      "s": "vim::Substitute",
      "shift-s": "vim::SubstituteLine",
      "> >": "vim::Indent",
      "< <": "vim::Outdent",
      "ctrl-pagedown": "pane::ActivateNextItem",
      "ctrl-pageup": "pane::ActivatePrevItem",
      // tree-sitter related commands
      "[ x": "editor::SelectLargerSyntaxNode",
      "] x": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    "context": "Editor && vim_mode == visual && vim_operator == none && !VimWaiting",
    "bindings": {
      // tree-sitter related commands
      "[ x": "editor::SelectLargerSyntaxNode",
      "] x": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    "context": "Editor && VimCount",
    "bindings": {
      "0": ["vim::Number", 0]
    }
  },
  {
    "context": "Editor && vim_operator == c",
    "bindings": {
      "c": "vim::CurrentLine",
      "d": "editor::Rename" // zed specific
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == c",
    "bindings": {
      "s": [
        "vim::PushOperator",
        {
          "ChangeSurrounds": {}
        }
      ]
    }
  },
  {
    "context": "Editor && vim_operator == d",
    "bindings": {
      "d": "vim::CurrentLine"
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == d",
    "bindings": {
      "s": ["vim::PushOperator", "DeleteSurrounds"]
    }
  },
  {
    "context": "Editor && vim_operator == y",
    "bindings": {
      "y": "vim::CurrentLine"
    }
  },
  {
    "context": "Editor && vim_mode == normal && vim_operator == y",
    "bindings": {
      "s": [
        "vim::PushOperator",
        {
          "AddSurrounds": {}
        }
      ]
    }
  },
  {
    "context": "Editor && vim_operator == ys",
    "bindings": {
      "s": "vim::CurrentLine"
    }
  },
  {
    "context": "Editor && VimObject",
    "bindings": {
      "w": "vim::Word",
      "shift-w": [
        "vim::Word",
        {
          "ignorePunctuation": true
        }
      ],
      "t": "vim::Tag",
      "s": "vim::Sentence",
      "p": "vim::Paragraph",
      "'": "vim::Quotes",
      "`": "vim::BackQuotes",
      "\"": "vim::DoubleQuotes",
      "|": "vim::VerticalBars",
      "(": "vim::Parentheses",
      ")": "vim::Parentheses",
      "b": "vim::Parentheses",
      "[": "vim::SquareBrackets",
      "]": "vim::SquareBrackets",
      "{": "vim::CurlyBrackets",
      "}": "vim::CurlyBrackets",
      "shift-b": "vim::CurlyBrackets",
      "<": "vim::AngleBrackets",
      ">": "vim::AngleBrackets",
      "a": "vim::Argument"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
    "bindings": {
      "u": "vim::ConvertToLowerCase",
      "U": "vim::ConvertToUpperCase",
      "o": "vim::OtherEnd",
      "shift-o": "vim::OtherEnd",
      "d": "vim::VisualDelete",
      "x": "vim::VisualDelete",
      "shift-d": "vim::VisualDelete",
      "shift-x": "vim::VisualDelete",
      "y": "vim::VisualYank",
      "shift-y": "vim::VisualYank",
      "p": "vim::Paste",
      "shift-p": [
        "vim::Paste",
        {
          "preserveClipboard": true
        }
      ],
      "s": "vim::Substitute",
      "shift-s": "vim::SubstituteLine",
      "shift-r": "vim::SubstituteLine",
      "c": "vim::Substitute",
      "~": "vim::ChangeCase",
      "*": [
        "vim::MoveToNext",
        {
          "partialWord": true
        }
      ],
      "#": [
        "vim::MoveToPrev",
        {
          "partialWord": true
        }
      ],
      "ctrl-a": "vim::Increment",
      "ctrl-x": "vim::Decrement",
      "g ctrl-a": [
        "vim::Increment",
        {
          "step": true
        }
      ],
      "g ctrl-x": [
        "vim::Decrement",
        {
          "step": true
        }
      ],
      "shift-i": "vim::InsertBefore",
      "shift-a": "vim::InsertAfter",
      "shift-j": "vim::JoinLines",
      "r": ["vim::PushOperator", "Replace"],
      "ctrl-c": ["vim::SwitchMode", "Normal"],
      "escape": ["vim::SwitchMode", "Normal"],
      "ctrl-[": ["vim::SwitchMode", "Normal"],
      ">": "vim::Indent",
      "<": "vim::Outdent",
      "i": [
        "vim::PushOperator",
        {
          "Object": {
            "around": false
          }
        }
      ],
      "a": [
        "vim::PushOperator",
        {
          "Object": {
            "around": true
          }
        }
      ]
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "g c": "editor::ToggleComments"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "escape": "vim::NormalBefore",
      "ctrl-c": "vim::NormalBefore",
      "ctrl-shift-v": "editor::Paste",
      "ctrl-[": "vim::NormalBefore",
      "ctrl-x ctrl-o": "editor::ShowCompletions",
      "ctrl-x ctrl-a": "assistant::InlineAssist", // zed specific
      "ctrl-x ctrl-c": "editor::ShowInlineCompletion", // zed specific
      "ctrl-x ctrl-l": "editor::ToggleCodeActions", // zed specific
      "ctrl-x ctrl-z": "editor::Cancel",
      "ctrl-w": "editor::DeleteToPreviousWordStart",
      "ctrl-u": "editor::DeleteToBeginningOfLine",
      "ctrl-d": "vim::Outdent",
      "ctrl-r \"": "editor::Paste",
      "ctrl-r +": "editor::Paste",
      "alt-j": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-m": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "Editor && vim_mode == replace",
    "bindings": {
      "escape": "vim::NormalBefore",
      "ctrl-c": "vim::NormalBefore",
      "ctrl-[": "vim::NormalBefore",
      "backspace": "vim::UndoReplace"
    }
  },
  {
    "context": "Editor && VimWaiting",
    "bindings": {
      "tab": "vim::Tab",
      "enter": "vim::Enter",
      "escape": ["vim::SwitchMode", "Normal"],
      "ctrl-[": ["vim::SwitchMode", "Normal"]
    }
  },
  {
    "context": "BufferSearchBar && !in_replace",
    "bindings": {
      "enter": "vim::SearchSubmit",
      "escape": "buffer_search::Dismiss"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      ":": "command_palette::Toggle",
      "alt-j": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-m": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Down"],
      "space g b": "branches::OpenRecent",
      "space f": "file_finder::Toggle",
      "space space": ["workspace::SendKeystrokes", "ctrl-tab enter"],
      "space z": "workspace::ToggleZoom",
      "space shift-s": [
        "workspace::Open",
        {
          "create_new_window": false
        }
      ],
      "space s": [
        "projects::OpenRecent",
        {
          "create_new_window": false
        }
      ],
      "space r": "task::Spawn",
      "space a": "workspace::NewSearch"
    }
  },
  {
    // netrw compatibility
    "context": "ProjectPanel && not_editing",
    "bindings": {
      ":": "command_palette::Toggle",
      "a": "project_panel::NewFile",
      "r": "project_panel::Rename",
      "/": "project_panel::NewSearchInDirectory",
      "shift-a": "project_panel::NewDirectory",
      "enter": "project_panel::OpenPermanent",
      "escape": "project_panel::ToggleFocus",
      "j": "project_panel::CollapseSelectedEntry",
      "k": "menu::SelectNext",
      "l": "menu::SelectPrev",
      "m": "project_panel::ExpandSelectedEntry",
      "o": "project_panel::OpenPermanent",
      "d": "project_panel::Delete",
      "t": "project_panel::OpenPermanent",
      "v": "project_panel::OpenPermanent",
      "x": "project_panel::Cut",
      "p": "project_panel::Paste",
      "shift-g": "menu::SelectLast",
      "g g": "menu::SelectFirst",
      "-": "project_panel::SelectParent",
      "alt-j": ["workspace::ActivatePaneInDirection", "Left"],
      "alt-m": ["workspace::ActivatePaneInDirection", "Right"],
      "alt-l": ["workspace::ActivatePaneInDirection", "Up"],
      "alt-k": ["workspace::ActivatePaneInDirection", "Down"]
    }
  }
]