#!/usr/bin/env bash

mod=Super
layout=rivercarro
runner=anyrun
term=kitty
browser=zen-browser
lock=hyprlock

left=J
right=M
up=L
down=K


riverctl keyboard-layout -options "caps:escape" fr
riverctl input "*Touchpad*" click-method clickfinger
riverctl input "*Touchpad*" tap enabled
riverctl input "*Touchpad*" natural-scroll enabled


riverctl focus-follows-cursor normal
riverctl attach-mode bottom
riverctl set-cursor-warp on-output-change

# $MOD+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal $mod Return spawn $term
riverctl map normal $mod B spawn $browser
riverctl map normal $mod D spawn $runner
riverctl map normal Control+Alt L spawn $lock

# $MOD+Q to close the focused view
riverctl map normal $mod Q close

# $MOD+Shift+E to exit river
riverctl map normal $mod+Shift E exit
riverctl map normal $mod+Shift R spawn "bash $HOME/.config/river/init"

riverctl map normal $mod $down focus-view down
riverctl map normal $mod $up focus-view up
riverctl map normal $mod $right focus-view right
riverctl map normal $mod $left focus-view left

riverctl map normal $mod+Shift $down swap down
riverctl map normal $mod+Shift $up swap up
riverctl map normal $mod+Shift $right swap right
riverctl map normal $mod+Shift $left swap left

# Outputs using arrow keys
for dir in right left up down; do
    key=$(echo $dir | sed 's/.*/\u&/')
    riverctl map normal $mod $key focus-output $dir
    riverctl map normal $mod+Shift $key send-to-output $dir
done

riverctl map normal $mod Next focus-output next
riverctl map normal $mod Prior focus-output previous
riverctl map normal $mod+Shift Next send-to-output next
riverctl map normal $mod+Shift Prior send-to-output previous

# Layout
riverctl default-layout $layout
pgrep $layout || $layout \
    -no-smart-gaps \
    -inner-gaps 10 \
    -outer-gaps 20 \
    &

riverctl map normal $mod+Control $right send-layout-cmd $layout "main-ratio +0.05"
riverctl map normal $mod+Control $left send-layout-cmd $layout "main-ratio -0.05"

# $MOD+Shift+H and Super+Shift+L to increment/decrement the main count of $LAYOUT(1)
riverctl map normal $mod+Control+Shift $right send-layout-cmd $layout "main-count +1"
riverctl map normal $mod+Control+Shift $left send-layout-cmd $layout "main-count -1"

# Change layout
riverctl map normal $mod Z  send-layout-cmd $layout "main-location-cycle left,monocle"


# $MOD+Alt+{H,J,K,L} to move floating views
riverctl map normal $mod+Alt $left move left 100
riverctl map normal $mod+Alt $down move down 100
riverctl map normal $mod+Alt $up move up 100
riverctl map normal $mod+Alt $right move right 100

# $MOD+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Alt+Control $left snap left
riverctl map normal $mod+Alt+Control $down snap down
riverctl map normal $mod+Alt+Control $up snap up
riverctl map normal $mod+Alt+Control $right snap right

# $MOD+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal $mod+Alt+Shift $left resize horizontal -100
riverctl map normal $mod+Alt+Shift $down resize vertical 100
riverctl map normal $mod+Alt+Shift $up resize vertical -100
riverctl map normal $mod+Alt+Shift $right resize horizontal 100

# $MOD + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# $MOD + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# # $MOD + Middle Mouse Button to toggle float
# riverctl map-pointer normal $mod BTN_MIDDLE toggle-float

riverctl map normal $mod F toggle-float

riverctl map normal $mod F11 toggle-fullscreen

all_tags=$(((1 << 32) - 1))

# Scratchpad
scratch_tag=$((1 << 24))

# Toggle the scratchpad with Super+P
riverctl map normal $mod Space toggle-focused-tags $scratch_tag

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal $mod+Shift Space set-view-tags $scratch_tag

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( $all_tags ^ $scratch_tag ))
riverctl spawn-tagmask $all_but_scratch_tag

# Sticky tag
sticky_tag=$((1 << 31))
all_but_sticky_tag=$(( $all_tags ^ $sticky_tag ))

riverctl map normal $mod S toggle-view-tags $sticky_tag
riverctl spawn-tagmask $all_but_sticky_tag

TAG_KEYS=(
    "ampersand"
    "eacute"
    "quotedbl"
    "apostrophe"
    "parenleft"
    "minus"
    "egrave"
    "underscore"
    "ccedilla"
    "agrave"
)

for i in $(seq 0 8)
do
    tags=$((1 << $i))

    echo "mapping ${TAG_KEYS[$i]} for actions on tag $tags"
    riverctl map normal $mod ${TAG_KEYS[$i]} set-focused-tags $(($sticky_tag + $tags))

    riverctl map normal $mod+Shift ${TAG_KEYS[$i]} set-view-tags $tags

    riverctl map normal $mod+Control ${TAG_KEYS[$i]} toggle-focused-tags $tags

    riverctl map normal $mod+Shift+Control ${TAG_KEYS[$i]} toggle-view-tags $tags
done

riverctl map normal $mod 0 set-focused-tags $all_but_scratch_tag
riverctl map normal $mod+Shift 0 set-view-tags $all_but_scratch_tag


# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

riverctl map normal $mod Print spawn 'grimblast copysave area "$HOME/pictures/screenshots/$(date +%F_%R:%S.png)"'

source ~/.config/river/colors
source ~/.config/river/autostart

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

riverctl rule-add -app-id "*" ssd
# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd
riverctl rule-add -app-id "zen-alpha" -title "" csd
