# Bindings
unbind C-b
set-option -g prefix C-space
bind-key C-space send-prefix

bind-key C-space 'send-keys C-space s Return'
bind-key x split-window -v \; resize-pane -y 30%
bind-key v split-window -h
bind-key c kill-pane
bind-key Q kill-session

bind-key g display-popup -E -w 80% -h 80% lazygit
bind-key k display-popup -E -w 80% -h 80% k9s

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -L'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -D'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -U'
bind-key -n 'M-m' if-shell "$is_vim" 'send-keys M-m' 'select-pane -R'

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# 
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'
# 
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Options
set -g status off
set -g mouse on
set -gq allow-passthrough on # For image nvim
set-option -g set-titles on
set-option -g set-titles-string "#S / #W"
set-option -g detach-on-destroy off
set-option -a terminal-features 'foot:RGB'
# Pnugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

# set -g @plugin '27medkamal/tmux-session-wizard'
# set -g @session-wizard 's'
set -g @plugin 'tmuxinator/tmuxinator'

set -g @plugin 'omerxx/tmux-sessionx'

set -g @sessionx-bind 'C-s'

# By default, tmux `<prefix>` key needs to pressed before `<mykey>` to launch
# sessionx. In case you just want to bind '<mykey>' without the tmux '<prefix>'
# add the following line to turn the prefix off. This option is set to
# on by defaut.
# set -g @sessionx-prefix on

# `C-x` is customizeable, by default it indexes directories in `$HOME/.config`,
# but this can be changed by adding the config below.
# e.g. set -g @sessionx-x-path '~/dotfiles'
set -g @sessionx-x-path '~/src'
set -g @sessionx-custom-paths ''
set -g @sessionx-custom-paths-subdirectories 'false'
set -g @sessionx-fzf-builtin-tmux 'on'
set -g @sessionx-filter-current 'false'

# Window mode can be turned on so that the default layout
# Has all the windows listed rather than sessions only
set -g @sessionx-window-mode 'off'

# Tree mode can be enabled which means that instead of a preview,
# a hierarchy of sessions and windows will be shown
set -g @sessionx-tree-mode 'off'

# Preview location and screenspace can be adjusted with these
# Reminder: it can be toggeled on/off with `?`
# set -g @sessionx-preview-location ''
# set -g @sessionx-preview-ratio '65%'

# The preview can also be disabled altogether
# set -g @sessionx-preview-enabled 'false'

# Change window dimensions
# set -g @sessionx-window-height '85%'
# set -g @sessionx-window-width '85%'

# If you want change the layout to top you can set
set -g @sessionx-layout 'reverse'

# If you want to change the prompt, the space is nedded to not overlap the icon
# set -g @sessionx-prompt " "

# If you want to change the pointer
# set -g @sessionx-pointer "▶ "

# Customize `ls` command to display your directories nicely (default: `ls`)
# Can be used with `exa`, `lsd`, or other command of your choice to
# set preview window to match your preference
# set -g @sessionx-ls-command 'lsd --tree --color=always --icon=always'

# When set to 'on' a non-result will be sent to zoxide for path matching
# Requires zoxide installed
set -g @sessionx-zoxide-mode 'on'

# If you want to pass in your own FZF options. This is passed in before all other
# arguments to FZF to ensure that other options like `sessionx-pointer` and
# `sessionx-window-height/width` still work. See `man fzf` for config options.
# set -g @sessionx-additional-options "--color pointer:9,spinner:92,marker:46"

# If you're running fzf lower than 0.35.0 there are a few missing features
# Upgrade, or use this setting for support
# set -g @sessionx-legacy-fzf-support 'on'

# With Tmuxinator turned 'on' (off by default), the plugin will take a given name
# and look for a tmuxinator project with that name.
# If found, it'll launch the template using tmuxinator
set -g @sessionx-tmuxinator-mode 'on'
# set -g @sessionx-bind-tmuxinator-list 'C-:'

# Turn on fzf-marks (default: off) mode to launch a new session from your marks
# set -g @sessionx-fzf-marks-mode 'off'

# If you want to filter sessions, use a comma separated list of session names
# e.g. set -g @sessionx-filtered-sessions 'scratch,somesession'
# This will filter out sessions that contain 'scratch' (used by tmux-floax)
# and 'somesession'
# set -g @sessionx-filtered-sessions 'scratch,somesession'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins'

run '/usr/share/tmux-plugin-manager/tpm'
