#!/usr/bin/env bash

set -euo pipefail

usage() {
  cat <<EOS
  Usage: 
    git psync [path]
EOS
}

__dbg() {
  [ -v DEBUG ] && echo "[DBG] $@" >&2 || true
}

cget="git config get --file $(git config --get pclone.root)/$(git config --get pclone.conf)"
cset="git config --file $(git config --get pclone.root)/$(git config --get pclone.conf)"

root=$(git config get pclone.root)

subdir=""
(("$#")) && subdir=$(echo $1 | sed "s#^$root/\?##")

echo "[INF] Syncing repos in $root/$subdir"

cfg_pattern=$(echo $subdir | sed "s#/#__#g")

path_keys=$($cget --all --show-names --regexp "pclone\.repo\.$cfg_pattern.*\.path" | cut -d' ' -f1)
for path_key in $path_keys; do
  __dbg "getting config from repo with $path_key"
  path=$($cget --all --regexp "$path_key")
  url_key=$(echo $path_key | sed 's/\.path$/.url/')
  __dbg "url key: $url_key"
  url=$($cget --all --regexp $url_key)

  __dbg "got repo with path $path and url $url"

  [ -z "$(ls -A "$root/$path" 2>/dev/null)" ] && (
    echo "[INF] cloning $url at $path"
    git pclone "$url" "$path"
  ) || (echo "[WRN] $path exists and is not empty, skipping...")
done
